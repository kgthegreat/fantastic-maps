%span{:style=>'display: block;text-align: center;'}
  %a{:href=>'/graph'}Get Graph
%div{:id=>'map'}
:javascript
  var map = new YMap(document.getElementById('map'));
  polylinePoints = [];
  places = [];
  all_long = [];
  all_lat = [];
  var min_lat = 0;
  var max_lat = 0;
  var min_long = 0;
  var max_long = 0;
  all_map_array =
  [
   { name: "Richmond Circle", sale_in_lt: 2000, lat: 12.970894663353144 ,long: 77.61926651000977 },
   { name: "MG Road", sale_in_lt: 4000, lat: 12.976289426815732 ,long: 77.59913921356201 },
   { name: "Vellara Junction", sale_in_lt: 1500, lat: 12.9660852794514 ,long: 77.60690689086914 },
   { name: "St. Josephs", sale_in_lt: 1000, lat: 12.965165212807788 ,long: 77.597379684448 },

  ];

  selected_map_array = [];
  var a_fuelsale = '45000'
  var a_vehicle = '230'
  function startMap(){
   map.addTypeControl();
   map.addZoomLong();
   map.addPanControl();
   map.setMapType(YAHOO_MAP_REG);
   map.drawZoomAndCenter("Bangalore", 3);
   //map.drawZoomAndCenter("94089", 4);
   map.addOverlay(new YGeoRSS('http://fantasticmaps.heroku.com/sample.xml'));
   YEvent.Capture(map, EventsList.MouseClick, reportPosition);
    function reportPosition(_e, _c){
     // It is optional to specify the location of the Logger.
     // Do so by sending a YCoordPoint to the initPos function.
     var mapCoordCenter = map.convertLatLonXY(map.getCenterLatLon());
     YLog.initPos(mapCoordCenter); //call initPos to set the starting location
     // Printing to the Logger
     currentGeoPoint = new YGeoPoint( _c.Lat, _c.Lon);
     placeMarker(currentGeoPoint);
     displayPolyLines(currentGeoPoint);
     //YLog.print("You Made a MouseClick!");
     //YLog.print("Latitude:" + _c.Lat);
     //YLog.print("Longitude:" + _c.Lon);
     all_long.push(_c.Lon)
     all_lat.push(_c.Lat)
     if(all_long.length)
     {
     findMinMax();
     }
    }
    function placeMarker(geoPoint){
     // Printing to the Logger
    // YLog.print("Adding marker at....");
    // YLog.print("Latitude:" + geoPoint.Lat + "Longitude:" + geoPoint.Lon);
     var newMarker= new YMarker(geoPoint, createCustomMarkerImage());
     //newMarker.addAutoExpand("Click to Add/Edit Details");
     //var markerMarkup = "Total Fuel Sales : "+ a_fuelsale;
     //markerMarkup += "</br>";
     //markerMarkup += "Total Vehicle Serviced : "+ a_vehicle;
     YEvent.Capture(newMarker, EventsList.MouseClick,
     function(){
      newMarker.openSmartWindow(markerMarkup);
     });
     map.addOverlay(newMarker);
    }
    function createCustomMarkerImage(){
     var myImage = new YImage();
     myImage.src = 'http://fantasticmaps.heroku.com/marker_p.gif';
     //    myImage.src = 'http://developer.yahoo.com/maps/star_green.gif';
     //myImage.src = 'http://l.yimg.com/a/i/us/map/gr/mt_ic_c.gif';
     myImage.size = new YSize(20,20);
     myImage.offsetSmartWindow = new YCoordPoint(0,0);
     return myImage;
    }
    function displayPolyLines(g_point){
     polylinePoints.push(g_point);
     if (canDisplayPolyLines){
      map.addOverlay(new YPolyline(polylinePoints, 'green',7,0.7));
     // YLog.print("Polyline added lines");
     }
    }

    this.canDisplayPolyLines = function() {
    // Check to make sure we have at least 2 points to connect
     return (polylinePoints.length > 1);
    }

    function findMinMax(){
    for each (var item in all_long)
    {
    if (min_long == 0)
    {
    min_long = item;
    max_long = item;
    }
    else if(min_long>item)
    {
    min_long = item;
    }
    else if(max_long<item)
    {
    max_long = item;
    }
    }
    for each (var item in all_lat)
    {
    if (min_lat == 0)
    {
    min_lat = item;
    max_lat = item;
    }
    else if(min_lat>item)
    {
    min_lat = item;
    }
    else if(max_lat<item)
    {
    max_lat = item;
    }
    }
    for each (var item in all_map_array)
    {
    if((min_long<item.long)&&(max_long>>item.long)&&(min_lat<item.lat)&&(max_lat>item))
    {

    }
    }
  }
  }
  window.onload = startMap;